Prompt


你是一名资深桌面应用工程师，请生成一个项目规划文档，目标是用 Tauri + React（或 Vue3）实现轻量 OCR 桌面应用。文档包括：项目目录结构、每个模块职责、必须的第三方库、异步/多线程设计思路、跨平台注意点（Windows/macOS），以及如何用最少依赖实现 OCR（tesseract.js 与可选本地后端方案）。输出应能作为开发任务清单。

你是一名前端 UI/UX 设计工程师，请给出主界面（Main Window）的详细设计说明文档，包括：区域划分（左侧历史/目录、右侧主工作区）、顶部工具栏（截图按钮、AI 问答入口、搜索）、底部状态栏（连接状态/模型状态）、以及每个控件的快捷键（例如：截图 Ctrl+Shift+S、打开设置 Ctrl+,、打开历史 Ctrl+H）。说明每个快捷键的可定制机制与冲突处理逻辑。

你是一名视觉设计师，请输出一套 macOS 风格的前端 Design Tokens（以 CSS 变量为主），包含：圆角半径（主窗口、弹窗、按钮）、玻璃模糊数值、半透明背景色（light/dark）、主色/强调色/次要文字色、文本字号与行高（标题/正文/小字）、常用阴影、按钮高度、边距标准、字体建议（San Francisco 优先，其次 Helvetica Neue / Segoe UI），以及按钮 hover / active 的微交互动效说明。要求可直接转换为 CSS 或 Tailwind 变量名。

你是一名产品设计师，请写出 OCR 结果弹窗（浮动模态框）的完整布局与交互说明，分为四个主要标签区：Summary（一键总结）、Research（Perplexity web search 结果与来源）、Ask（对 OCR 文本提问并展示 AI 回答）和 Actions（复制、导出 TXT/PDF、翻译、保存历史、高亮/搜索原图）。说明每个区域的 UI 组件、默认显示优先级、loading/错误态、以及 keyboard shortcuts（如复制 Ctrl+C，保存 Ctrl+S，切换标签 Tab）。

你是一名动效/前端工程师，请描述 OCR 弹窗及截图框的微交互动效细则，包括：截图矩形的边框样式（宽度、羽化）、选区高亮 glow 动画、文字“流出”动画（position + opacity + blur easing 的做法描述）、弹窗淡入淡出缓动曲线（cubic-bezier 建议）与呼吸缩放（scale 100→102）以及键盘触发时的焦点管理（按 Esc 取消，Enter 确认）。

你是一名桌面集成工程师，请写一段实现思路提示，说明如何用 Tauri 的 global shortcut 注册机制与前端 overlay（HTML canvas 或绝对定位 div）结合实现矩形/全屏/窗口截图。包括：快捷键自定义存储、冲突检测、截图时的悬浮选择 UI、以及如何把截图图像（base64/文件）安全传递到 OCR 模块（前端 vs 后端选择的异同）。

你是一名 AI 工程师，请详细比较两种 OCR 路径并给出推荐流程：A) 前端使用 tesseract.js（完全 JS，无需本地依赖）；B) 调用本地 Python/Rust 后端（pytesseract / EasyOCR / rust OCR），并说明两者在识别精度、多语言支持（中文/英文）、性能、二进制体积及离线能力上的差异。然后给出一个异步任务队列设计提示，保证前端 UI 永远不卡顿（包括任务优先级、取消机制与超时处理）。

你是一名 AI 集成工程师，请输出一个 AI 集成策略，包括：如何把 OCR 文本作为 prompt 提交给 OpenAI（或用户本地模型），如何并行调用 Perplexity 的 web search（或其 API）以获取带来源的参考答案，如何合并/展示多个结果来源（confidence、来源链接），以及在用户隐私/速率限制下的降级策略（例如无 API 时使用本地小模型或仅展示 OCR 原文）。

你是一名系统工程师与 UX 设计师，请写出“本地 AI 一键安装”功能的完整用户流程与实现提示：包括支持的模型列表（量化后的 Llama/Alpaca/Meta 轻量模型示例）、下载验证（hash 校验）、模型安装路径选择、可选的 GPU/CPU 配置说明、自动化安装脚本（调用本地包管理器或嵌入小型 runtime）、模型运行与监控（内存/CPU 使用提示），以及如何在应用内列出/切换已安装模型并显示兼容性提示。还需包含失败回滚与用户告警文案示例。


你是一名产品经理，请总结一套优先级策略：当本地模型可用时优先使用本地；否则使用用户已配置的远程 API（OpenAI/Perplexity）；提供用户可设置的偏好（优先项、超时阈值、并行请求数），并说明在无网络或限流时的降级 UX（例如“仅本地模式”切换提示）。

你是一名后端设计师，请给出本地历史/设置数据结构说明（JSON 或 SQLite schema），字段示例与索引建议，包括：ocr_record（id, timestamp, image_path, text, language, summary, tags, ai_answers[]），model_record（name, path, version, hash, installed_at），settings（shortcuts, preferred_model, api_keys_encrypted, theme）。并给出同步/备份策略建议（本地优先，用户可选同步到云）。

你是一名前端工程师，请写出支持导出和剪贴板交互的 UX 说明：支持导出为 TXT、PDF、Markdown（带图像）、以及复制纯文本到系统剪贴板；说明导出对话框字段（文件名、路径、包含元数据选项）、以及导出失败时的提示与重试策略。

你是一名产品设计师，请给出设置页与 about 页的完整布局与文字内容建议。设置页应包含：快捷键管理、模型管理（本地/远端）、语言选择、多语言 OCR 设定、隐私与日志导出、更新检查与回滚选项。About 页应包含：应用版本、已安装模型列表、开源组件许可、联系方式与隐私政策链接。提供每个页面的 keyboard shortcut 建议（例如打开设置 Ctrl+,，检查更新 Ctrl+U）。

你是一名桌面集成工程师，请列出系统托盘图标右键菜单项与对应行为，包括：显示/隐藏主窗口、开始截图、打开历史、切换“仅本地模式”、模型管理、检查更新、快速设置（快捷键配置）、退出并最小化到托盘。说明托盘图标右键项的可定制性以及在不同平台（Windows/macOS）上的差异处理。

你是一名安全工程师，请写一段隐私与权限实现提示：说明如何加密存储 API keys（本地加密 + 用户密码保护）、如何清楚地告知用户何时数据会上传到远端、以及默认离线隐私优先的设置。并给出一段用户可显示的隐私说明文案示例。

你是一名产品创新顾问，请列出 8-12 条附加智能功能建议（简短说明），例如：自动为 OCR 文本生成 tags, 对数学公式的支持、关键句高亮、自动摘要并建议笔记标题、表格识别并导出为 CSV、智能搜索历史、模糊图片增强、批量 OCR、OCR 结果自动翻译并生成双语笔记等。对每个功能写一句落地实现提示和优先级建议（High/Medium/Low）。

你是一名测试工程师，请写出一个测试与 CI 策略提示：包括单元测试（关键模块）、集成测试（OCR 流水线）、E2E（快捷键触发与弹窗流程）、静态类型检查/lint、以及在 CI 中如何做打包测试（多平台构建/签名）。列出推荐的测试工具与最低覆盖率目标。

---

## 📋 Development Guidelines (IMPORTANT)

**For AI Developer:**

1. **Before Each Work Session**: 
   - Always read Prompt.txt, lists.md, structures.md, and tobefix.md
   - Review current issues and warnings

2. **Error and Warning Management**:
   - Solve all errors and warnings in tobefix.md BEFORE continuing with new features
   - Add any new errors/warnings to tobefix.md immediately
   - Never ignore TypeScript errors or Rust warnings

3. **Documentation Rules**:
   - Update structures.md when adding new files (explain purpose of each file)
   - Update lists.md when completing tasks (mark with [x])
   - Only use PROGRESS.md for session summaries (append, never delete old content)
   - Do NOT create other summary documents

4. **EXE Packaging Mindset**:
   - Always think: "Will this work after compiling to .exe?"
   - No Python/Node.js runtime requirements for users
   - Bundle all dependencies (Tesseract language files, workers, etc.)
   - Test that everything is self-contained

5. **Git Commit Rules**:
   - Commit frequently with clear messages (max 30 words)
   - Update documentation before committing
   - Never commit with unresolved errors

---

## 🧮 Additional Features Required

你是一名数学 OCR 工程师，请设计数学公式识别与转换功能：识别 OCR 文本中的数学公式（如 x² + 2x + 1 = 0），并转换为标准数学表示法（LaTeX 格式或 Unicode 数学符号）。说明如何识别常见数学符号（上标、下标、分数、根号、积分、求和等），以及如何处理混合文本与公式的情况。提供公式预览与编辑功能建议。

